{"version":3,"sources":["utils.ts","stores.ts","examples.tsx","index.tsx"],"names":["githubApi","getRepo","user","url","concat","fetch","then","response","status","Error","json","todoStore","createStore","toggleTodo","todos","todo","Object","objectSpread","addTodo","input","value","defineProperty","arrayStore","push","state","newValue","counterStore","count","increment","_ref","decrement","_ref2","incrementByTen","_incrementByTen","asyncToGenerator","regenerator_default","a","mark","_callee","_ref3","wrap","_context","prev","next","Promise","resolve","setTimeout","abrupt","stop","_x","apply","this","arguments","githubStore","repos","asyncState","userId","setRepoId","getUserRepos","_getUserRepos","_callee2","_ref4","_payload","_ref5","asyncAction","_context2","_x2","_x3","_x4","nameAndCounterStore","name","length","_ref6","objectWithoutProperties","_ref7","updateName","primitiveStore","kalle","ada","Payload","_useStore2","useStore","_useStore2$state","actions","react_default","createElement","Fragment","onChange","e","target","repeat","n","component","Array","fill","reduce","acc","current","index","entries","_Object$entries","_useStore","onClick","_useLocalStore","useLocalStore","_useStore4","_useStore5","map","i","key","_useStore6","ref","useRef","slicedToArray","done","_useStore7","_useStore8","_useStore8$state","_useStore8$actions","loading","error","toString","data","repo","placeholder","theme","createMuiTheme","useStyles","makeStyles","spacing","root","flexGrow","backgroundColor","palette","background","paper","grid","padding","example","marginBottom","Example","title","children","classes","Card","className","CardContent","Typography","gutterBottom","variant","rootElement","document","getElementById","render","ThemeProvider","_useState","useState","_useState2","tabIndex","setTabIndex","examples","components","AppBar","position","Toolbar","color","Tabs","event","k","Tab","label","Grid","direction","justify","alignItems","container","_ref8","Component","item","xs","md","src_Example"],"mappings":"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","file":"static/js/main.d2c015bb.chunk.js","sourcesContent":["import { Repo } from \"./stores\";\n\nconst genericFetch: <T>(url: string) => Promise<T> = url =>\n  fetch(url).then(response => {\n    if (response.status >= 400 && response.status < 600) {\n      throw new Error(`Error ${response.status} from server`);\n    }\n    return response.json();\n  });\n\nconst githubApi = {\n  getRepo: (user: string) =>\n    genericFetch<Repo[]>(`https://api.github.com/users/${user}/repos`)\n};\n\nexport default githubApi;\n","import { createStore, asyncState } from \"global-hook-store\";\nimport githubApi from \"./utils\";\n\ntype Todo = { [key: string]: boolean };\n\nconst todoStore = createStore({} as Todo, {\n  toggleTodo: (todos, todo) => {\n    todos[todo] = !todos[todo];\n    return { ...todos };\n  },\n  addTodo: (todos, input) => {\n    const todo = input.value;\n    input.value = \"\";\n    return { ...todos, [todo]: false };\n  }\n});\n\nconst arrayStore = createStore([] as Array<string>, {\n  push: (state, newValue: string) => {\n    state.push(newValue);\n    return state;\n  }\n});\n\nconst counterStore = createStore(\n  {\n    count: 0\n  },\n  {\n    increment: ({ count }) => ({ count: count + 1 }),\n    decrement: ({ count }) => ({ count: count - 1 }),\n    incrementByTen: async ({ count }) => {\n      await new Promise(resolve => setTimeout(resolve, 3000));\n      return { count: count + 10 };\n    }\n  }\n);\n\nexport type Repo = {\n  id: string;\n  name: string;\n};\n\nconst githubStore = createStore(\n  {\n    repos: asyncState<Repo[]>([]),\n    userId: \"\"\n  },\n  {\n    setRepoId: (state, userId: string) => ({ ...state, userId }),\n    getUserRepos: async ({ userId }, _payload, { asyncAction }) =>\n      asyncAction(\"repos\", githubApi.getRepo(userId))\n  }\n);\n\nconst nameAndCounterStore = createStore(\n  {\n    count: 0,\n    name: \"Willy wonka\",\n    get length() {\n      return this.name.length;\n    }\n  },\n  {\n    increment: ({ count, ...state }) => ({ ...state, count: count + 1 }),\n    decrement: ({ count, ...state }) => ({ ...state, count: count - 1 }),\n    updateName: (state, name) => ({ ...state, name })\n  }\n);\n\nconst primitiveStore = createStore(\"Choose name\", {\n  kalle: () => \"kålle\",\n  ada: () => \"ada\"\n});\n\nexport {\n  counterStore,\n  nameAndCounterStore,\n  todoStore,\n  arrayStore,\n  primitiveStore,\n  githubStore\n};\n","import React, { useRef } from \"react\";\nimport useStore, { useLocalStore } from \"global-hook-store\";\nimport {\n  counterStore,\n  nameAndCounterStore,\n  primitiveStore,\n  arrayStore,\n  todoStore,\n  githubStore\n} from \"./stores\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Counter = () => {\n  const { actions, state } = useStore(counterStore);\n  return (\n    <>\n      <h4>Count: {state.count}</h4>\n      <button onClick={() => actions.decrement()}>-</button>\n      <button onClick={() => actions.increment()}>+</button>\n    </>\n  );\n};\n\nconst Payload = () => {\n  const {\n    state: { name, length },\n    actions: { updateName }\n  } = useStore(nameAndCounterStore);\n  const {\n    state: { count }\n  } = useStore(counterStore);\n\n  return (\n    <>\n      <h4>Name: {name}</h4>\n      <h4>Count from counter example: {count}</h4>\n      <input value={name} onChange={e => updateName(e.target.value)} />\n      <span>\n        <small>Char length: {length}</small>\n      </span>\n    </>\n  );\n};\n\nconst LocalStore = () => {\n  const {\n    state: { count },\n    actions\n  } = useLocalStore(counterStore);\n\n  return (\n    <>\n      <h4>Local count: {count}</h4>\n      <button onClick={() => actions.decrement()}>-</button>\n      <button onClick={() => actions.increment()}>+</button>\n    </>\n  );\n};\n\nconst Primitive = () => {\n  const { state: name, actions } = useStore(primitiveStore);\n\n  return (\n    <>\n      <h4>Name: {name}</h4>\n      <button onClick={() => actions.kalle()}>Kålle</button>\n      <button onClick={() => actions.ada()}>Ada</button>\n    </>\n  );\n};\n\nconst ArrayComponent = () => {\n  const { state, actions } = useStore(arrayStore);\n\n  return (\n    <>\n      <div>\n        {state.map((a, i) => (\n          <span key={i}>{a} </span>\n        ))}\n      </div>\n      <button onClick={() => actions.push(`Value #${state.length}`)}>\n        PUSH\n      </button>\n    </>\n  );\n};\n\nconst TodoList = () => {\n  const { state, actions } = useStore(todoStore);\n  const ref = useRef(null);\n\n  return (\n    <>\n      {Object.entries(state).map(([todo, done], i) => (\n        <div onClick={() => actions.toggleTodo(todo)} key={i + todo}>\n          {todo}\n          {done ? \" ✔\" : \" ⏲\"}\n        </div>\n      ))}\n      <input ref={ref} />\n      <button onClick={() => actions.addTodo(ref.current!)}>Add todo</button>\n    </>\n  );\n};\n\nconst AsyncComponent = () => {\n  const {\n    actions,\n    state: { count }\n  } = useStore(counterStore);\n\n  return (\n    <>\n      <h4>Counter store count: {count}</h4>\n      <button onClick={() => actions.incrementByTen()}>\n        3s Delayed increment by 10\n      </button>\n    </>\n  );\n};\n\nconst Github = () => {\n  const {\n    state: { repos, userId },\n    actions: { getUserRepos, setRepoId }\n  } = useStore(githubStore);\n\n  return (\n    <>\n      <div>\n        {(repos.loading && \"Loading...\") ||\n          (repos.error && repos.error.toString()) ||\n          repos.data.map((repo, i) => <p key={i}>{repo.name}</p>)}\n      </div>\n      <input\n        placeholder=\"Github username\"\n        value={userId}\n        onChange={e => setRepoId(e.target.value)}\n      />\n      <button onClick={() => getUserRepos()}>Fetch repos</button>\n    </>\n  );\n};\n\nconst repeat = (n: number, component: () => JSX.Element) =>\n  Array(n)\n    .fill(component)\n    .reduce((acc, current, index) => {\n      acc[`${component.name} component ${index + 1}`] = current;\n      return acc;\n    }, {}) as Record<string, () => JSX.Element>;\n\nexport default Object.entries({\n  [\"Counters\"]: repeat(4, Counter),\n  [\"Payload\"]: { Payload, [\"Payload in other component\"]: Payload },\n  [\"Local store\"]: repeat(4, LocalStore),\n  [\"Primitive & Array\"]: {\n    ...repeat(2, Primitive),\n    ...repeat(4, ArrayComponent)\n  },\n  [\"Todo list\"]: repeat(2, TodoList),\n\n  [\"Async\"]: {\n    ...repeat(2, AsyncComponent),\n    ...repeat(2, Github)\n  }\n});\n","import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport { makeStyles, ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport \"./styles.css\";\n\nimport examples from \"./examples\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst theme = createMuiTheme();\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  grid: {\n    padding: spacing(2)\n  },\n  example: {\n    marginBottom: spacing(2)\n  }\n}));\n\nconst Example: React.FC<{\n  title: string;\n}> = ({ title, children }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.example}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography component=\"div\">{children}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const handleTabChange = (event: React.ChangeEvent<any>, newValue: any) => {\n    setTabIndex(newValue);\n  };\n\n  const [name, components] = examples[tabIndex]!;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            Global Hook Store examples\n          </Typography>\n        </Toolbar>\n        <Tabs value={tabIndex} onChange={handleTabChange}>\n          {examples.map(([k, v]) => (\n            <Tab key={k} label={k} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <Grid\n        className={classes.grid}\n        spacing={2}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n        container\n      >\n        {Object.entries(components).map(([name, Component]) => (\n          <Grid key={name} item xs={12} md={6}>\n            <Example title={name}>{Component && <Component />}</Example>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nrender(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  rootElement\n);\n"],"sourceRoot":""}